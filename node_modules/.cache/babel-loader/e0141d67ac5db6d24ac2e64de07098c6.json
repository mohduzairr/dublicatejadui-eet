{"ast":null,"code":"var _jsxFileName = \"/home/uzair/Documents/code/jadui-eet/src/PropertiesImages/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PropertiesImages = ({\n  images,\n  setImages\n}) => {\n  _s();\n\n  const inputRef = useRef();\n\n  const upload = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('images', this.state.image);\n    axios.post(\"http://localhost:8000/api/images\", data).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          responseMsg: {\n            status: response.data.status,\n            message: response.data.message\n          }\n        });\n        setTimeout(() => {\n          this.setState({\n            image: \"\",\n            responseMsg: \"\"\n          });\n        }, 2000);\n        document.querySelector(\"#imageForm\").reset(); // getting uploaded images\n\n        this.refs.child.getImages();\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input\",\n        onChange: () => setImages(inputRef.current.files[0]),\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: upload,\n        children: \"upoad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PropertiesImages, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = PropertiesImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertiesImages\");","map":{"version":3,"sources":["/home/uzair/Documents/code/jadui-eet/src/PropertiesImages/index.jsx"],"names":["React","useState","useRef","PropertiesImages","images","setImages","inputRef","upload","e","preventDefault","data","FormData","append","state","image","axios","post","then","response","status","setState","responseMsg","message","setTimeout","document","querySelector","reset","refs","child","getImages","catch","error","console","current","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AACpD,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;;AACA,QAAMK,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsB,KAAKC,KAAL,CAAWC,KAAjC;AAEAC,IAAAA,KAAK,CAACC,IAAN,CAAW,kCAAX,EAA+CN,IAA/C,EACCO,IADD,CACOC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC7B,aAAKC,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAE;AACbF,YAAAA,MAAM,EAAED,QAAQ,CAACR,IAAT,CAAcS,MADT;AAEbG,YAAAA,OAAO,EAAEJ,QAAQ,CAACR,IAAT,CAAcY;AAFV;AADH,SAAd;AAMAC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKH,QAAL,CAAc;AACdN,YAAAA,KAAK,EAAE,EADO;AAEdO,YAAAA,WAAW,EAAE;AAFC,WAAd;AAIH,SALS,EAKP,IALO,CAAV;AAOAG,QAAAA,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,KAArC,GAd6B,CAe7B;;AACA,aAAKC,IAAL,CAAUC,KAAV,CAAgBC,SAAhB;AACC;AACJ,KApBD,EAqBCC,KArBD,CAqBQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAvBD;AAwBH,GA7BD;;AA+BA,sBACI;AAAA,2BACI;AAAA,8BAGI;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,EAAE,EAAC,OADf;AAEA,QAAA,QAAQ,EAAE,MAAM1B,SAAS,CAACC,QAAQ,CAAC2B,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,CAAD,CAFzB;AAGA,QAAA,GAAG,EAAE5B;AAHL;AAAA;AAAA;AAAA;AAAA,cAHJ,eASA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeS,CAhDN;;GAAMJ,gB;;KAAAA,gB","sourcesContent":["import React, { useState, useRef } from 'react'\n\nexport const PropertiesImages = ({images,setImages}) => {\n    const inputRef = useRef()\n    const upload = (e) => {\n        e.preventDefault();\n        const data = new FormData() \n        data.append('images', this.state.image)\n\n        axios.post(\"http://localhost:8000/api/images\", data)\n        .then((response) => {\n            if (response.status === 200) {\n            this.setState({\n                responseMsg: {\n                status: response.data.status,\n                message: response.data.message,\n                },\n            });\n            setTimeout(() => {\n                this.setState({\n                image: \"\",\n                responseMsg: \"\",\n                });\n            }, 2000);\n\n            document.querySelector(\"#imageForm\").reset();\n            // getting uploaded images\n            this.refs.child.getImages();\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                {/* <input type=\"file\" value={images} placeholder=\"image upload\" label=\"upload\"\n                onChange={(e)=>setImages(e.target.value)} */}\n                <input \n                type=\"file\" id=\"input\"\n                onChange={() => setImages(inputRef.current.files[0])}\n                ref={inputRef}\n            />\n\n            <button type=\"submit\" onClick={upload}>upoad</button>\n            </div>\n        </div>\n    )\n            }\n"]},"metadata":{},"sourceType":"module"}