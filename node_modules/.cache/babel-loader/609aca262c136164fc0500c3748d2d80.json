{"ast":null,"code":"var _jsxFileName = \"/home/uzair/Documents/code/jadui-eet/src/pages/PropertyList/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport CardList from \"../CardList\";\nimport axios from 'axios';\nimport properties from '../../properties';\nimport { Footer } from 'pages/HomePage/components/Footer';\nimport { DifferentPropertiesHeader } from 'pages/DifferentPropertiesHeader';\nimport { useLocation } from 'react-router';\nimport Header from 'pages/HomePage/components/Header';\nimport { SubPropertyListHeader } from 'pages/PropertyListHeader'; // import { CardBox } from 'pages/CardBox';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PropertyList = ({\n  city,\n  setCity,\n  setLocation\n}) => {\n  _s();\n\n  const location = useLocation();\n  console.log(\"city dikhao\" + location);\n  const [fetchProperties, setFetchProperties] = useState([]);\n  const [cityy, setCityy] = useState();\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    const fetchData = {\n      city: location.state.city,\n      flat: location.state.flat,\n      reason: location.state.reason,\n      maxbudget: location.state.maxbudget,\n      minbudget: location.state.minbudget,\n      location: location.state.area,\n      region: location.state.region\n    };\n    console.log(\"dikha do be pagal\" + fetchData);\n    const propertiesResult = await axios.get(properties.search_url, {\n      params: fetchData\n    });\n    console.log(propertiesResult);\n    setFetchProperties(propertiesResult.data.data);\n    setCityy(fetchData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      city: city,\n      setCity: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(SubPropertyListHeader, {\n      city: city,\n      setCity: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this), cityy && /*#__PURE__*/_jsxDEV(DifferentPropertiesHeader, {\n      city: cityy.city,\n      flat: cityy.flat,\n      reason: cityy.reason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this), fetchProperties.map((property, index) => {\n      return /*#__PURE__*/_jsxDEV(CardList, {\n        id: property.id,\n        city: property.city,\n        flatprice: property.flat_price,\n        location: property.location,\n        per_square_fit: property.per_square_fit,\n        furnish_status: property.furnished_status,\n        images: property.property_images,\n        reason: property.reason,\n        type: property.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PropertyList, \"JcFNmfbPMRG7SvvcPTQhBAdhHKM=\", false, function () {\n  return [useLocation];\n});\n\n_c = PropertyList;\nexport default PropertyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"sources":["/home/uzair/Documents/code/jadui-eet/src/pages/PropertyList/index.js"],"names":["React","useState","useEffect","CardList","axios","properties","Footer","DifferentPropertiesHeader","useLocation","Header","SubPropertyListHeader","PropertyList","city","setCity","setLocation","location","console","log","fetchProperties","setFetchProperties","cityy","setCityy","getData","fetchData","state","flat","reason","maxbudget","minbudget","area","region","propertiesResult","get","search_url","params","data","map","property","index","id","flat_price","per_square_fit","furnished_status","property_images","type"],"mappings":"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","sourcesContent":["import{ React,useState, useEffect} from 'react'\nimport CardList from \"../CardList\";\nimport axios from 'axios';\nimport properties from '../../properties'\nimport { Footer } from 'pages/HomePage/components/Footer';\nimport { DifferentPropertiesHeader } from 'pages/DifferentPropertiesHeader';\nimport { useLocation } from 'react-router';\nimport Header from 'pages/HomePage/components/Header';\nimport { SubPropertyListHeader } from 'pages/PropertyListHeader';\n// import { CardBox } from 'pages/CardBox';\n\n\n const PropertyList = ({city,setCity,setLocation}) => {\n      const location=  useLocation();\n      console.log(\"city dikhao\"+location);\n     const [fetchProperties, setFetchProperties] = useState([]);\n     const [cityy,setCityy]=useState()\n     useEffect(() => {\n        getData();\n        \n\n         \n     }, [])\n\n    async function getData() {\n        const fetchData={city:location.state.city,flat:location.state.flat,reason:location.state.reason, maxbudget:location.state.maxbudget,minbudget:location.state.minbudget,location:location.state.area,region:location.state.region}\n        console.log(\"dikha do be pagal\"+fetchData);\n        const propertiesResult = await axios.get(properties.search_url, { params: fetchData });\n        console.log(propertiesResult);\n        setFetchProperties(propertiesResult.data.data);\n        setCityy(fetchData)\n\n    }\n    return (\n        <div>\n          \n             <Header\n             city={city}\n             setCity={setCity}   \n             />\n           <SubPropertyListHeader\n           city={city}\n           setCity={setCity}\n           />\n      {  cityy &&\n           <DifferentPropertiesHeader\n           city = {cityy.city}\n           flat = {cityy.flat}\n           reason={cityy.reason}\n          \n           />}\n           \n            \n                    {\n                        fetchProperties.map((property,index)=>{\n                            return (\n                                <CardList\n                                id={property.id}\n                                city={property.city}\n                                flatprice={property.flat_price}\n                                location={property.location}\n                                per_square_fit={property.per_square_fit}\n                                furnish_status={property.furnished_status}\n                                images={property.property_images}\n                                reason={property.reason}\n                                type={property.type}\n                               \n                                />\n             \n                        )})\n                    }\n                          <Footer/>\n\n        </div>\n    )\n}\n\n\nexport default  PropertyList"]},"metadata":{},"sourceType":"module"}