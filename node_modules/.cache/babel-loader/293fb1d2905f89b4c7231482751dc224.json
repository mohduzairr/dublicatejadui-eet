{"ast":null,"code":"var _jsxFileName = \"/home/uzair/Documents/code/jadui-eet/src/pages/PropertyListPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport CardList from \"../CardList\";\nimport axios from 'axios';\nimport properties from '../../properties';\nimport { useLocation } from 'react-router';\nimport { Footer } from 'comman/components/Footer';\nimport Header from 'comman/components/Header';\nimport { DifferentPropertiesHeader } from './components/DifferentPropertiesHeader';\nimport { SubPropertyListHeader } from 'comman/components/SubPropertyListHeader';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PropertyListPage = ({\n  city,\n  setCity,\n  setLocation\n}) => {\n  _s();\n\n  var _property$selectedCit2;\n\n  const property = useSelector(state => state.property);\n  const location = useLocation();\n  console.log(\"city dikhao\" + location); // setCity(location.state.city);\n\n  const [fetchProperties, setFetchProperties] = useState([]);\n  const [defaultfetchProperties, setDefaultFetchProperties] = useState([]);\n  const [cityy, setCityy] = useState();\n  useEffect(() => {\n    getData();\n  }, [location.state]);\n\n  async function getData() {\n    var _property$selectedCit, _property$selectedLoc;\n\n    const fetchData = {\n      city: property === null || property === void 0 ? void 0 : (_property$selectedCit = property.selectedCity) === null || _property$selectedCit === void 0 ? void 0 : _property$selectedCit.city,\n      flat: location.state.flat,\n      reason: location.state.reason,\n      maxbudget: location.state.maxbudget,\n      minbudget: location.state.minbudget,\n      location: property === null || property === void 0 ? void 0 : (_property$selectedLoc = property.selectedLocation) === null || _property$selectedLoc === void 0 ? void 0 : _property$selectedLoc.area,\n      onebedroom: location.state.onebedroom,\n      twobedroom: location.state.twobedroom,\n      threebedroom: location.state.threebedroom,\n      owner: location.state.rent,\n      agent: location.state.agent\n    };\n    console.log(\"dikha do be pagal\" + fetchData);\n    const propertiesResult = await axios.get(properties.search_url, {\n      params: fetchData\n    });\n    console.log(propertiesResult);\n    setFetchProperties(propertiesResult.data.data);\n    setDefaultFetchProperties(propertiesResult.data.data);\n    setCityy(fetchData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      city: property === null || property === void 0 ? void 0 : (_property$selectedCit2 = property.selectedCity) === null || _property$selectedCit2 === void 0 ? void 0 : _property$selectedCit2.city,\n      setCity: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(SubPropertyListHeader, {\n      city: city,\n      setCity: setCity,\n      fetchProperties: fetchProperties,\n      setFetchProperties: setFetchProperties,\n      defaultfetchProperties: defaultfetchProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this), cityy && /*#__PURE__*/_jsxDEV(DifferentPropertiesHeader, {\n      city: cityy.city,\n      flat: cityy.flat,\n      reason: cityy.reason,\n      price: cityy.flat_price,\n      location: cityy.location,\n      per_square_fit: cityy.per_square_fit,\n      created_at: cityy.created_at,\n      fetchPropHeader: fetchProperties,\n      setFetchProperties: setFetchProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this), fetchProperties.map((property, index) => {\n      return /*#__PURE__*/_jsxDEV(CardList, {\n        id: property.id,\n        city: property.city,\n        flatprice: property.flat_price,\n        location: property.location,\n        per_square_fit: property.per_square_fit,\n        furnish_status: property.furnished_status,\n        images: property.property_images,\n        reason: property.reason,\n        type: property.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PropertyListPage, \"yktiNXwYJVi5ORR+6kx7l32Ozoc=\", false, function () {\n  return [useSelector, useLocation];\n});\n\n_c = PropertyListPage;\nexport default PropertyListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyListPage\");","map":{"version":3,"sources":["/home/uzair/Documents/code/jadui-eet/src/pages/PropertyListPage/index.js"],"names":["React","useState","useEffect","CardList","axios","properties","useLocation","Footer","Header","DifferentPropertiesHeader","SubPropertyListHeader","useSelector","PropertyListPage","city","setCity","setLocation","property","state","location","console","log","fetchProperties","setFetchProperties","defaultfetchProperties","setDefaultFetchProperties","cityy","setCityy","getData","fetchData","selectedCity","flat","reason","maxbudget","minbudget","selectedLocation","area","onebedroom","twobedroom","threebedroom","owner","rent","agent","propertiesResult","get","search_url","params","data","flat_price","per_square_fit","created_at","map","index","id","furnished_status","property_images","type"],"mappings":"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","sourcesContent":["import{ React,useState, useEffect} from 'react'\nimport CardList from \"../CardList\";\nimport axios from 'axios';\nimport properties from '../../properties'\nimport { useLocation } from 'react-router';\nimport { Footer } from 'comman/components/Footer';\nimport Header from 'comman/components/Header';\nimport { DifferentPropertiesHeader } from './components/DifferentPropertiesHeader';\nimport { SubPropertyListHeader } from 'comman/components/SubPropertyListHeader';\nimport { useSelector } from 'react-redux';\n\n\n const PropertyListPage = ({city,setCity,setLocation}) => {\n     const property = useSelector(state => state.property)\n      const location=  useLocation();\n      console.log(\"city dikhao\"+location);\n     // setCity(location.state.city);\n     const [fetchProperties, setFetchProperties] = useState([]);\n     const [defaultfetchProperties, setDefaultFetchProperties] = useState([]);\n\n     const [cityy,setCityy]=useState()\n     useEffect(() => {\n        getData();\n        \n\n         \n     }, [location.state]);\n\n    async function getData() {\n        const fetchData={city:property?.selectedCity?.city,flat:location.state.flat,reason:location.state.reason, maxbudget:location.state.maxbudget,minbudget:location.state.minbudget,location:property?.selectedLocation?.area,onebedroom:location.state.onebedroom,twobedroom:location.state.twobedroom,threebedroom:location.state.threebedroom,owner:location.state.rent,agent:location.state.agent}\n        console.log(\"dikha do be pagal\"+fetchData);\n        const propertiesResult = await axios.get(properties.search_url, { params: fetchData });\n        console.log(propertiesResult);\n        setFetchProperties(propertiesResult.data.data);\n        setDefaultFetchProperties(propertiesResult.data.data)\n        setCityy(fetchData)\n\n    }\n    return (\n        <div>\n          \n             <Header\n                city={property?.selectedCity?.city}\n             setCity={setCity}   \n             />\n\n           <SubPropertyListHeader\n              city={city}\n           setCity={setCity}\n           fetchProperties ={fetchProperties}\n           setFetchProperties={setFetchProperties}\n           defaultfetchProperties={defaultfetchProperties}\n\n           />\n\n            {  cityy &&\n           <DifferentPropertiesHeader\n                        city ={cityy.city}\n                        flat ={cityy.flat}\n                       reason={cityy.reason}\n                        price={cityy.flat_price}\n                        location={cityy.location}\n               per_square_fit={cityy.per_square_fit}\n                   created_at={cityy.created_at}\n             fetchPropHeader ={fetchProperties}\n           setFetchProperties={setFetchProperties}\n           />}\n           \n            \n                    {\n                       \n                       fetchProperties.map((property,index)=>{\n                            return (\n                                <CardList\n                                id={property.id}\n                                city={property.city}\n                                flatprice={property.flat_price}\n                                location={property.location}\n                                per_square_fit={property.per_square_fit}\n                                furnish_status={property.furnished_status}\n                                images={property.property_images}\n                                reason={property.reason}\n                                type={property.type}\n                               \n                                />\n             \n                        )})\n                    }\n                          <Footer/>\n\n        </div>\n    )\n}\n\n\nexport default  PropertyListPage"]},"metadata":{},"sourceType":"module"}