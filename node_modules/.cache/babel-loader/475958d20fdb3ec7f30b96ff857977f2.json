{"ast":null,"code":"var _jsxFileName = \"/home/uzair/Documents/code/jadui-eet/src/PropertiesImages/index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PropertiesImages = ([images, setImages]) => {\n  _s();\n\n  const [preview, setPreview] = useState();\n  useEffect(() => {\n    if (!images) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(images);\n    setPreview(objectUrl);\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [images]);\n  const inputRef = useRef();\n\n  const upload = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('images', images);\n    axios.post(\"http://localhost:8000/api/upload\", data).then(response => {\n      alert(JSON.stringify(response.data));\n\n      if (response.status === 200) {\n        this.setState({\n          responseMsg: {\n            status: response.data.status,\n            message: response.data.message\n          }\n        });\n        setTimeout(() => {\n          this.setState({\n            image: \"\",\n            responseMsg: \"\"\n          });\n        }, 2000);\n        document.querySelector(\"#imageForm\").reset(); // getting uploaded images\n\n        this.refs.child.getImages();\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input\",\n        onChange: () => setImages(inputRef.current.files),\n        ref: inputRef,\n        multiple: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), images && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: upload,\n        children: \"upoad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PropertiesImages, \"207diptt7iULiZ85OyqCG6+OGsE=\");\n\n_c = PropertiesImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertiesImages\");","map":{"version":3,"sources":["/home/uzair/Documents/code/jadui-eet/src/PropertiesImages/index.jsx"],"names":["axios","React","useState","useRef","useEffect","PropertiesImages","images","setImages","preview","setPreview","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","inputRef","upload","e","preventDefault","data","FormData","append","post","then","response","alert","JSON","stringify","status","setState","responseMsg","message","setTimeout","image","document","querySelector","reset","refs","child","getImages","catch","error","console","current","files"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC,CAACC,MAAD,EAAQC,SAAR,CAAD,KAAwB;AAAA;;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACE,MAAL,EAAa;AACTG,MAAAA,UAAU,CAACC,SAAD,CAAV;AACA;AACH;;AAED,UAAMC,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBP,MAApB,CAAlB;AACAG,IAAAA,UAAU,CAACE,SAAD,CAAV;AAEA,WAAO,MAAMC,GAAG,CAACE,eAAJ,CAAoBH,SAApB,CAAb;AACH,GAVQ,EAUN,CAACL,MAAD,CAVM,CAAT;AAaA,QAAMS,QAAQ,GAAGZ,MAAM,EAAvB;;AAEA,QAAMa,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBf,MAAtB;AAEAN,IAAAA,KAAK,CAACsB,IAAN,CAAW,kCAAX,EAA+CH,IAA/C,EACCI,IADD,CACOC,QAAD,IAAc;AAChBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACL,IAAxB,CAAD,CAAL;;AACA,UAAIK,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC7B,aAAKC,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAE;AACbF,YAAAA,MAAM,EAAEJ,QAAQ,CAACL,IAAT,CAAcS,MADT;AAEbG,YAAAA,OAAO,EAAEP,QAAQ,CAACL,IAAT,CAAcY;AAFV;AADH,SAAd;AAMAC,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKH,QAAL,CAAc;AACdI,YAAAA,KAAK,EAAE,EADO;AAEdH,YAAAA,WAAW,EAAE;AAFC,WAAd;AAIH,SALS,EAKP,IALO,CAAV;AAOAI,QAAAA,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,KAArC,GAd6B,CAe7B;;AACA,aAAKC,IAAL,CAAUC,KAAV,CAAgBC,SAAhB;AACC;AACJ,KArBD,EAsBCC,KAtBD,CAsBQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAxBD;AAyBH,GA9BD;;AAgCA,sBACI;AAAA,2BACI;AAAA,8BAEI;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,EAAE,EAAC,OADf;AAEA,QAAA,QAAQ,EAAE,MAAMlC,SAAS,CAACQ,QAAQ,CAAC4B,OAAT,CAAiBC,KAAlB,CAFzB;AAGA,QAAA,GAAG,EAAE7B,QAHL;AAIA,QAAA,QAAQ,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQKT,MAAM,iBAAK;AAAK,QAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,cARhB,eASA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeS,CAjEN;;GAAMX,gB;;KAAAA,gB","sourcesContent":["import axios from 'axios'\nimport React, { useState, useRef, useEffect } from 'react'\n\nexport const PropertiesImages = ([images,setImages]) => {\n    const [preview, setPreview] = useState()\n\n    useEffect(() => {\n        if (!images) {\n            setPreview(undefined)\n            return\n        }\n\n        const objectUrl = URL.createObjectURL(images)\n        setPreview(objectUrl)\n\n        return () => URL.revokeObjectURL(objectUrl)\n    }, [images])\n\n\n    const inputRef = useRef()\n\n    const upload = (e) => {\n        e.preventDefault();\n        const data = new FormData() \n        data.append('images', images)\n\n        axios.post(\"http://localhost:8000/api/upload\", data)\n        .then((response) => {\n            alert(JSON.stringify(response.data))\n            if (response.status === 200) {\n            this.setState({\n                responseMsg: {\n                status: response.data.status,\n                message: response.data.message,\n                },\n            });\n            setTimeout(() => {\n                this.setState({\n                image: \"\",\n                responseMsg: \"\",\n                });\n            }, 2000);\n\n            document.querySelector(\"#imageForm\").reset();\n            // getting uploaded images\n            this.refs.child.getImages();\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <div>\n         \n                <input \n                type=\"file\" id=\"input\"\n                onChange={() => setImages(inputRef.current.files)}\n                ref={inputRef}\n                multiple=\"multiple\"\n               />\n                {images &&  <img src={preview} /> }\n            <button type=\"submit\" onClick={upload}>upoad</button>\n            </div>\n        </div>\n    )\n            }\n"]},"metadata":{},"sourceType":"module"}